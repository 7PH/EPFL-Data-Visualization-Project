{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "import io\n",
    "import re\n",
    "import datetime\n",
    "import math\n",
    "import itertools "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [],
   "source": [
    "masterfile='http://data.gdeltproject.org/gdeltv2/masterfilelist.txt'\n",
    "master = pd.read_csv(masterfile, sep = \" \", header=None, names=['Size', 'Code', 'URL']).dropna(how='any')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "metadata": {},
   "outputs": [],
   "source": [
    "def parse_date_csv_url(string):\n",
    "    date = re.findall('/([0-9]*)\\.', string)[0]\n",
    "    parsed_date = datetime.datetime.strptime(str(date), \"%Y%m%d%H%M%S\")\n",
    "    return [parsed_date.day, parsed_date.month, parsed_date.year, parsed_date.hour, parsed_date.minute, 0]\n",
    "\n",
    "master = master.assign(Date=master['URL'].apply(lambda x: parse_date_csv_url(x)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sample_data(data,step_years,step_months,step_hours,step_minutes):\n",
    "    years = np.arange(2015,2018,step_years)\n",
    "    months = np.arange(1,12,step_months)\n",
    "    days = np.arange(1,31,step_days)\n",
    "    hours = np.arange(0,23,step_hours)\n",
    "    minutes = np.arange(0,45,step_minutes)\n",
    "    \n",
    "    permutations = [ (d,mo,y,h,mi,0) for y in years for mo in months for d in days for h in hours for mi in minutes]\n",
    "    data.Date.filter(items=permutations)\n",
    "    data\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 391,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ok\n"
     ]
    }
   ],
   "source": [
    "if [18, 2, 2015, 23, 1, 0] in [[18, 2, 2015, 23, 1, 0], [18, 2, 2015, 23, 0, 0]]:\n",
    "    print('ok')\n",
    "#master.Date[0].isin([[18, 2, 2015, 23, 1, 0], [18, 2, 2015, 23, 0, 0]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def in_list(x,permutations):\n",
    "    if x in permutations:\n",
    "        return x\n",
    "\n",
    "years = np.arange(2015,2018,1)\n",
    "months = np.arange(1,12,1)\n",
    "days = np.arange(1,31,5)\n",
    "hours = np.arange(0,23,5)\n",
    "minutes = np.arange(0,45,15)\n",
    "\n",
    "permutations = [ [d,mo,y,h,mi,0] for y in years for mo in months for d in days for h in hours for mi in minutes]\n",
    "master.Date.apply(lambda x: in_list(x,permutations))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "export_names = \"GlobalEventID Day MonthYear Year FractionDate Actor1Code Actor1Name Actor1CountryCode Actor1KnownGroupCode Actor1EthnicCode Actor1Religioni1Code Actor1Religion2Code Actor1Type1Code Actor1Type2Code Actor1Type3Code Actor2Code Actor2Name Actor2CountryCode Actor2KnownGroupCode Actor2EthnicCode Actor2Religioni1Code Actor2Religion2Code Actor2Type1Code Actor2Type2Code Actor2Type3Code IsRootEvent EventCode EventBaseCode EventRootCode QuadClass GoldsteinScale NumMentions NumSources NumArticles AvgTone Actor1Geo_Type Actor1Geo_Fullname Actor1Geo_CountryCode Actor1Geo_ADM1Code Actor1Geo_ADM2Code Actor1Geo_Lat Actor1Geo_Long Actor1Geo_FeatureID Actor2Geo_Type Actor2Geo_Fullname Actor2Geo_CountryCode Actor2Geo_ADM1Code Actor2Geo_ADM2Code Actor2Geo_Lat Actor2Geo_Long Actor2Geo_FeatureID ActionGeo_Type ActionGeo_Fullname ActionGeo_CountryCode ActionGeo_ADM1Code ActionGeo_ADM2Code ActionGeo_Lat ActionGeo_Long ActionGeo_FeatureID DATEADDED SOURCEURL\"\n",
    "export_columns = export_names.split(\" \")\n",
    "export = pd.DataFrame(columns=export_columns)\n",
    "\n",
    "export = pd.read_csv(master['URL'][6], sep = '\\t', names = export_columns,\n",
    "                     usecols = [\"GlobalEventID\", \"Day\", \"Actor1Geo_Lat\", \"Actor1Geo_Long\", \"Actor2Geo_Lat\", \"Actor2Geo_Long\",\n",
    "                                'NumMentions','NumSources','NumArticles','AvgTone', 'ActionGeo_Lat', 'ActionGeo_Long','DATEADDED','SOURCEURL'])\n",
    "export.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 412,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GlobalEventId</th>\n",
       "      <th>EventTimeDate</th>\n",
       "      <th>MentionTimeDate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>410412347</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>410412348</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>410412349</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>410412350</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>410412351</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>410368256</td>\n",
       "      <td>20150218193000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>410290898</td>\n",
       "      <td>20150218141500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>410290898</td>\n",
       "      <td>20150218141500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>410290898</td>\n",
       "      <td>20150218141500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>410290898</td>\n",
       "      <td>20150218141500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>410290898</td>\n",
       "      <td>20150218141500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>410290898</td>\n",
       "      <td>20150218141500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>410290898</td>\n",
       "      <td>20150218141500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>410412352</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>410405468</td>\n",
       "      <td>20150218223000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>410412353</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>410412354</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>410412355</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>410412356</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>410358405</td>\n",
       "      <td>20150218184500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>410358406</td>\n",
       "      <td>20150218184500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>410412357</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>410412358</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>410295087</td>\n",
       "      <td>20150218143000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>410412359</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>410412359</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>410371693</td>\n",
       "      <td>20150218194500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>410412360</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>410399544</td>\n",
       "      <td>20150218220000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>410399544</td>\n",
       "      <td>20150218220000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8432</th>\n",
       "      <td>410414600</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8433</th>\n",
       "      <td>410414600</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8434</th>\n",
       "      <td>410414600</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8435</th>\n",
       "      <td>410414600</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8436</th>\n",
       "      <td>410272737</td>\n",
       "      <td>20150218130000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8437</th>\n",
       "      <td>410388918</td>\n",
       "      <td>20150218210000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8438</th>\n",
       "      <td>410245239</td>\n",
       "      <td>20150218110000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8439</th>\n",
       "      <td>410414601</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8440</th>\n",
       "      <td>410414602</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8441</th>\n",
       "      <td>410414603</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8442</th>\n",
       "      <td>410414604</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8443</th>\n",
       "      <td>410414605</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8444</th>\n",
       "      <td>410357412</td>\n",
       "      <td>20150218183000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8445</th>\n",
       "      <td>410357413</td>\n",
       "      <td>20150218183000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8446</th>\n",
       "      <td>410414606</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8447</th>\n",
       "      <td>410414607</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8448</th>\n",
       "      <td>410414608</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8449</th>\n",
       "      <td>410414609</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8450</th>\n",
       "      <td>410414610</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8451</th>\n",
       "      <td>410414611</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8452</th>\n",
       "      <td>410414612</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8453</th>\n",
       "      <td>410343539</td>\n",
       "      <td>20150218173000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8454</th>\n",
       "      <td>410343540</td>\n",
       "      <td>20150218173000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8455</th>\n",
       "      <td>410414613</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8456</th>\n",
       "      <td>410414614</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8457</th>\n",
       "      <td>410414615</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8458</th>\n",
       "      <td>410414616</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8459</th>\n",
       "      <td>410232648</td>\n",
       "      <td>20150218100000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8460</th>\n",
       "      <td>410339294</td>\n",
       "      <td>20150218171500</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8461</th>\n",
       "      <td>410414617</td>\n",
       "      <td>20150218230000</td>\n",
       "      <td>20150218230000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8462 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      GlobalEventId   EventTimeDate  MentionTimeDate\n",
       "0         410412347  20150218230000   20150218230000\n",
       "1         410412348  20150218230000   20150218230000\n",
       "2         410412349  20150218230000   20150218230000\n",
       "3         410412350  20150218230000   20150218230000\n",
       "4         410412351  20150218230000   20150218230000\n",
       "5         410368256  20150218193000   20150218230000\n",
       "6         410290898  20150218141500   20150218230000\n",
       "7         410290898  20150218141500   20150218230000\n",
       "8         410290898  20150218141500   20150218230000\n",
       "9         410290898  20150218141500   20150218230000\n",
       "10        410290898  20150218141500   20150218230000\n",
       "11        410290898  20150218141500   20150218230000\n",
       "12        410290898  20150218141500   20150218230000\n",
       "13        410412352  20150218230000   20150218230000\n",
       "14        410405468  20150218223000   20150218230000\n",
       "15        410412353  20150218230000   20150218230000\n",
       "16        410412354  20150218230000   20150218230000\n",
       "17        410412355  20150218230000   20150218230000\n",
       "18        410412356  20150218230000   20150218230000\n",
       "19        410358405  20150218184500   20150218230000\n",
       "20        410358406  20150218184500   20150218230000\n",
       "21        410412357  20150218230000   20150218230000\n",
       "22        410412358  20150218230000   20150218230000\n",
       "23        410295087  20150218143000   20150218230000\n",
       "24        410412359  20150218230000   20150218230000\n",
       "25        410412359  20150218230000   20150218230000\n",
       "26        410371693  20150218194500   20150218230000\n",
       "27        410412360  20150218230000   20150218230000\n",
       "28        410399544  20150218220000   20150218230000\n",
       "29        410399544  20150218220000   20150218230000\n",
       "...             ...             ...              ...\n",
       "8432      410414600  20150218230000   20150218230000\n",
       "8433      410414600  20150218230000   20150218230000\n",
       "8434      410414600  20150218230000   20150218230000\n",
       "8435      410414600  20150218230000   20150218230000\n",
       "8436      410272737  20150218130000   20150218230000\n",
       "8437      410388918  20150218210000   20150218230000\n",
       "8438      410245239  20150218110000   20150218230000\n",
       "8439      410414601  20150218230000   20150218230000\n",
       "8440      410414602  20150218230000   20150218230000\n",
       "8441      410414603  20150218230000   20150218230000\n",
       "8442      410414604  20150218230000   20150218230000\n",
       "8443      410414605  20150218230000   20150218230000\n",
       "8444      410357412  20150218183000   20150218230000\n",
       "8445      410357413  20150218183000   20150218230000\n",
       "8446      410414606  20150218230000   20150218230000\n",
       "8447      410414607  20150218230000   20150218230000\n",
       "8448      410414608  20150218230000   20150218230000\n",
       "8449      410414609  20150218230000   20150218230000\n",
       "8450      410414610  20150218230000   20150218230000\n",
       "8451      410414611  20150218230000   20150218230000\n",
       "8452      410414612  20150218230000   20150218230000\n",
       "8453      410343539  20150218173000   20150218230000\n",
       "8454      410343540  20150218173000   20150218230000\n",
       "8455      410414613  20150218230000   20150218230000\n",
       "8456      410414614  20150218230000   20150218230000\n",
       "8457      410414615  20150218230000   20150218230000\n",
       "8458      410414616  20150218230000   20150218230000\n",
       "8459      410232648  20150218100000   20150218230000\n",
       "8460      410339294  20150218171500   20150218230000\n",
       "8461      410414617  20150218230000   20150218230000\n",
       "\n",
       "[8462 rows x 3 columns]"
      ]
     },
     "execution_count": 412,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mention_names = \"GlobalEventId EventTimeDate MentionTimeDate MentionType MentionSourceName MentionIdentifier SentenceID ActorCharOffset Actor2CharOffset ActionCharOffset InRawTest Confidence MentionDocLen MentionDocTone MentionDocTranslationinfo Extras\"\n",
    "mention_columns = mention_names.split(\" \")\n",
    "mention = pd.DataFrame(columns=mention_columns)\n",
    "\n",
    "mention = pd.read_csv(master['URL'][1], sep = '\\t', names = mention_columns,\n",
    "                      usecols = [\"GlobalEventId\", \"EventTimeDate\", \"MentionTimeDate\"])\n",
    "mention.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for value in list1:\n",
    "    if len(list2[list2 == value]) == 1:\n",
    "        list3.append(value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
